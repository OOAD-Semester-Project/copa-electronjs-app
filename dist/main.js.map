{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/desktop-clipboard-card/desktop-clipboard-card.component.ts","./src/app/desktop-clipboard-card/desktop-clipboard-card.component.html","./src/app/dialog-overview/dialog-overview.component.ts","./src/app/dialog-overview/dialog-overview.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/http.service.ts","./src/app/ipc.service.ts","./src/app/keycloak.service.ts","./src/app/materials-module.ts","./src/app/mobile-clipboard-card/mobile-clipboard-card.component.ts","./src/app/mobile-clipboard-card/mobile-clipboard-card.component.html","./src/app/socket.service.ts","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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AACD;AACJ;AACF;AACqB;AACd;AACa;AACX;AACa;AACjB;AACQ;AACN;AACI;AACM;AACR;AACE;AACI;AACD;AACT;AACE;AACF;AACA;AACuB;AACb;AACK;AACQ;AACrB;AACE;AACE;AACF;AACW;AACN;AACT;AACE;AACF;AACM;AACA;AACN;;AAGrD;IAAA;KAgDkC;qGAArB,kBAAkB;kKAAlB,kBAAkB,kBA9C3B,4DAAU;YACV,sEAAe;YACf,qEAAgB;YAChB,iEAAc;YACd,+DAAa;YACb,qEAAc;YACd,oFAAqB;YACrB,uEAAc;YACd,oFAAoB;YACpB,yEAAe;YACf,sFAAqB;YACrB,qEAAa;YACb,6EAAiB;YACjB,uEAAc;YACd,2EAAgB;YAChB,iFAAmB;YACnB,yEAAe;YACf,2EAAgB;YAChB,+EAAkB;YAClB,8EAAiB;YACjB,qEAAa;YACb,uEAAc;YACd,qEAAa;YACb,qEAAa;YACb,2EAAmB;YACnB,+EAAkB;YAClB,oFAAoB;YACpB,4FAAwB;YACxB,uEAAc;YACd,uEAAe;YACf,yEAAe;YACf,2EAAgB;YAChB,yEAAe;YACf,oFAAoB;YACpB,8EAAiB;YACjB,qEAAa;YACb,uEAAc;YACd,qEAAa;YACb,2EAAgB;YAChB,2EAAgB;YAChB,qEAAa;YACb,gEAAY;YACZ,sEAAe;YACf,sEAAe;6BA1FnB;CA6FkC;AAAH;mIAAlB,kBAAkB,cA9C3B,4DAAU;QACV,sEAAe;QACf,qEAAgB;QAChB,iEAAc;QACd,+DAAa;QACb,qEAAc;QACd,oFAAqB;QACrB,uEAAc;QACd,oFAAoB;QACpB,yEAAe;QACf,sFAAqB;QACrB,qEAAa;QACb,6EAAiB;QACjB,uEAAc;QACd,2EAAgB;QAChB,iFAAmB;QACnB,yEAAe;QACf,2EAAgB;QAChB,+EAAkB;QAClB,8EAAiB;QACjB,qEAAa;QACb,uEAAc;QACd,qEAAa;QACb,qEAAa;QACb,2EAAmB;QACnB,+EAAkB;QAClB,oFAAoB;QACpB,4FAAwB;QACxB,uEAAc;QACd,uEAAe;QACf,yEAAe;QACf,2EAAgB;QAChB,yEAAe;QACf,oFAAo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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { IpcService } from './ipc.service';\nimport { HttpService } from './http.service';\nimport { ClipboardData } from './clipboard.interface';\nimport { SocketService } from './socket.service';\nimport { interval } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'copa-electron';\n  clipboardDataArr: ClipboardData[] = [];\n  mobileClipboardDataArr: ClipboardData[] = [];\n  desktopClipboardDataArr: ClipboardData[] = [];\n  timeout: any;\n\n  constructor(private readonly _ipc: IpcService,\n    private httpService: HttpService,\n    private socketService: SocketService) {\n      \n\n      // this._ipc.on('newClipboardTextFromElectron', (event: Electron.IpcMessageEvent, data) => {\n      //   // console.log('pong');\n      //   console.log(\"app component:  \", event, data);\n      //   // newData = data;\n      //   this.httpService.addClip({\n      //     \"clipboardText\": data[\"clipboardText\"],\n      //     \"timestamp\": data[\"timestamp\"],\n      //     \"fromType\": \"desktop\",\n      //     \"from\": \"desktop1\"\n      //   }).subscribe();\n      // });\n      \n      // this._ipc.send('ping');\n  }\n\n  addToClipboardArr(data: ClipboardData) {\n    if(data != undefined) {\n      if(data[\"clipboardText\"].length>=30) {\n        data[\"displayMessage\"] = data[\"clipboardText\"].split(\" \").slice(0,6).join(\" \")+\"......\"\n      } else {\n        data[\"displayMessage\"] = data[\"clipboardText\"]\n      }\n      if (data[\"fromType\"] === \"desktop\"){                \n        this.desktopClipboardDataArr.push(data);        \n      } else {        \n        this.mobileClipboardDataArr.push(data);\n      }    \n    }\n  }\n\n  ngOnInit(): void {\n    this.httpService.getAllClips().subscribe((data: any) => {\n      console.log(data);      \n      data.forEach((d: ClipboardData) => {\n        this.addToClipboardArr(d);\n      })      \n    });\n    \n\n    this.socketService.getClips().subscribe((data: ClipboardData) => {\n      console.log(\"New data in mobile component: \", data);\n      // this.addToClipboardArr(data);\n      this.clipboardDataArr = [];\n      this.desktopClipboardDataArr = [];\n      this.mobileClipboardDataArr = [];\n      this.httpService.getAllClips().subscribe((data: any) => {\n        console.log(data);      \n        data.forEach((d: ClipboardData) => {\n          this.addToClipboardArr(d);\n        });\n        this.desktopClipboardDataArr.sort((a, b) => +a.timestamp > +b.timestamp ? -1 : 1) \n        this.mobileClipboardDataArr.sort((a, b) => +a.timestamp > +b.timestamp ? -1 : 1) \n        \n      });\n      this._ipc.send('newData', data);\n    })\n\n    this.socketService.listenForNewDataArrived().subscribe((data: ClipboardData) => {\n      console.log(\"New data in mobile component: \", data);\n      // this.addToClipboardArr(data);\n      this.clipboardDataArr = [];\n      this.desktopClipboardDataArr = [];\n      this.mobileClipboardDataArr = [];\n      this.httpService.getAllClips().subscribe((data: any) => {\n        console.log(data);      \n        data.forEach((d: ClipboardData) => {\n          this.addToClipboardArr(d);\n        });\n        \n        this.desktopClipboardDataArr.sort((a, b) => +a.timestamp > +b.timestamp ? -1 : 1) \n        this.mobileClipboardDataArr.sort((a, b) => +a.timestamp > +b.timestamp ? -1 : 1) \n        console.log(this.desktopClipboardDataArr);\n        console.log(this.mobileClipboardDataArr);\n      });\n      // this._ipc.send('newData', data);\n    })\n  }\n}\n","<div>\n  <app-header></app-header>\n  <mat-tab-group style=\"margin: 2% 4%\">\n    <mat-tab label=\"Mobile\"> \n      <app-mobile-clipboard-card [mobileClipboardDataArr]=\"mobileClipboardDataArr\"></app-mobile-clipboard-card> \n    </mat-tab>\n    <mat-tab label=\"Desktop\"> \n      <app-desktop-clipboard-card [desktopClipboardDataArr]=\"desktopClipboardDataArr\"></app-desktop-clipboard-card>\n    </mat-tab>\n  </mat-tab-group>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RouterModule } from '@angular/router';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HttpClientModule} from '@angular/common/http';\nimport {DemoMaterialModule} from './materials-module';\nimport { HeaderComponent } from './header/header.component';\nimport { DesktopClipboardCardComponent } from './desktop-clipboard-card/desktop-clipboard-card.component';\nimport { MobileClipboardCardComponent } from './mobile-clipboard-card/mobile-clipboard-card.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { DialogOverviewComponent } from './dialog-overview/dialog-overview.component';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\n// import { initializer } from './app.initializer'\n// import { KeycloakAngularModule, KeycloakService } from 'keycloak-angular';\nimport { environment } from 'src/environments/environment';\n\n\nimport { KeycloakService } from './keycloak.service';\n\n\nconst config: SocketIoConfig = { url: environment.clipboardserver.baseUrl, options: {} };\nexport function kcFactory(keycloakService: KeycloakService) {\n  return () => keycloakService.init();\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    DesktopClipboardCardComponent,\n    MobileClipboardCardComponent,\n    DialogOverviewComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    // RouterModule.forRoot([\n    //   { },\n    // ]),\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    DemoMaterialModule,\n    MatNativeDateModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    ClipboardModule,\n    SocketIoModule.forRoot(config),\n    // KeycloakAngularModule\n  ],\n  providers: [\n    // {\n    //   provide: APP_INITIALIZER,\n    //   useFactory: initializer,\n    //   multi: true,\n    //   deps: [KeycloakService]\n    // }\n    KeycloakService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: kcFactory,\n      deps: [KeycloakService],\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent],\n  exports: [ClipboardModule]\n})\nexport class AppModule { }\n","\nimport {Component, Inject, OnInit, Input} from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { HttpService } from '../http.service';\nimport { ClipboardData } from '../clipboard.interface';\nimport { SocketService } from '../socket.service';\nimport { DialogOverviewComponent } from '../dialog-overview/dialog-overview.component';\nimport { Clipboard } from '@angular/cdk/clipboard';\nimport { CommentStmt } from '@angular/compiler';\nimport { IpcService } from '../ipc.service';\n\n/**\n * @title Dialog Overview\n */\n@Component({\n  selector: 'app-desktop-clipboard-card',\n    templateUrl: './desktop-clipboard-card.component.html',\n    styleUrls: ['./desktop-clipboard-card.component.css']\n})\nexport class DesktopClipboardCardComponent implements OnInit{\n  @Input() desktopClipboardDataArr: ClipboardData[] = [];\n  // private _data: ClipboardData;\n\n  // public get clipboardDataArr(): ClipboardData[] {\n  //   return this._clipboardDataArr;\n  // }\n\n  constructor(public dialog: MatDialog, \n    private httpService: HttpService,\n    // private socketService: SocketService,\n    // private ipcService: IpcService\n    ) {\n  }\n\n  // addToClipboardArr(data: ClipboardData) {\n  //   if(data != undefined) {\n  //     if (data[\"fromType\"] !== \"mobile\"){\n  //       if(data[\"clipboardText\"].length>=30) {\n  //         data[\"displayMessage\"] = data[\"clipboardText\"].split(\" \").slice(0,6).join(\" \")+\"......\"\n  //       } else {\n  //         data[\"displayMessage\"] = data[\"clipboardText\"]\n  //       }\n  //       console.log(\"Desktop component: \", data);\n  //       this._clipboardDataArr.push(data);\n  //       this._clipboardDataArr.sort((a, b) => +a.timestamp > +b.timestamp ? -1 : 1) \n  //     }      \n  //   }\n  // }\n  ngOnInit(): void {\n    // this.httpService.getAllClips().subscribe((data: any) => {\n    //   console.log(\"Data: \", data);\n    //   data.forEach((d: ClipboardData) => {\n    //     this.addToClipboardArr(d);\n    //   })      \n    // });\n    \n    // this.socketService.getClips().subscribe((data: ClipboardData) => {\n    //   console.log(\"New data in desktop component: \", data);\n    //   // this.addToClipboardArr(data);\n    //   this._clipboardDataArr = [];\n    //   this.httpService.getAllClips().subscribe((data: any) => {\n    //     console.log(data);      \n    //     data.forEach((d: ClipboardData) => {\n    //       this.addToClipboardArr(d);\n    //     })\n        \n    //   });\n    //   this.ipcService.send(\"newData\", data);\n    // })\n  }\n  \n  openDialog(data): void {    \n    const dialogRef = this.dialog.open(DialogOverviewComponent, {\n      width: '550px',\n      data: data\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n    });\n\n  }\n  \n  deleteClip(data: ClipboardData): void {\n    this.httpService.deleteClip(data).subscribe((resultData: any) => {\n      console.log(\"delete response: \", resultData);\n      // this.desktopClipboardDataArr = this.desktopClipboardDataArr.filter(function( obj ) {\n      //   return obj._id !== data._id;\n      // });\n    })\n  }\n}\n\n\n/**  Copyright 2019 Google LLC. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license */\n","<mat-card *ngFor=\"let data of desktopClipboardDataArr\" style=\"margin: 2% 0%\">\n    <div style=\"display: flex; justify-content: space-between; width: 100%;\">\n        <div class=\"text-class\" (click)=\"openDialog(data)\">\n            {{data.displayMessage}}\n        </div>   \n\n        <!-- <div class=\"date-class\">\n            {{data.timestamp}}\n        </div> -->\n        <div class=\"example-button-container\">\n            <button mat-icon-button color=\"primary\" aria-label=\"Example icon button with a delete icon\" (click)=\"deleteClip(data)\">\n                <mat-icon>delete</mat-icon>\n            </button>\n        </div>\n    </div>\n    \n</mat-card>\n  \n  \n  <!-- Copyright 2019 Google LLC. All Rights Reserved.\n      Use of this source code is governed by an MIT-style license that\n      can be found in the LICENSE file at http://angular.io/license -->","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ClipboardData } from '../clipboard.interface';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'dialog-overview',\n  templateUrl: 'dialog-overview.component.html',\n})\nexport class DialogOverviewComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogOverviewComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: ClipboardData,\n    private _snackBar: MatSnackBar) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  public get clipboardText(): string {\n    return this.data[\"clipboardText\"];\n  }\n\n  /* To copy any Text */\n  copyText(val: string){    \n    this._snackBar.open('Copied to clipboard', '', {\n      duration: 1500\n    });\n\n    let selBox = document.createElement('textarea');\n      selBox.style.position = 'fixed';\n      selBox.style.left = '0';\n      selBox.style.top = '0';\n      selBox.style.opacity = '0';\n      selBox.value = val;\n      document.body.appendChild(selBox);\n      selBox.focus();\n      selBox.select();\n      document.execCommand('copy');\n      document.body.removeChild(selBox);\n    }\n}","<h1 mat-dialog-title></h1>\n<div mat-dialog-content style=\"display: flex;\">\n<div style=\"width: 90%;\"> \n    <p>{{clipboardText}}</p>\n    </div>\n    <div>        \n      <mat-icon matRipple style=\"cursor: pointer;\" (click)=\"copyText(data.clipboardText)\">content_copy</mat-icon>\n    </div>\n  </div>\n  <div mat-dialog-actions>\n    <button mat-button (click)=\"onNoClick()\" cdkFocusInitial style=\"margin: auto;\">Close</button>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { KeycloakService } from '../keycloak.service';\n// import { KeycloakService } from 'keycloak-angular';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  private logoutUrl: string = \"#\";\n  private headerText: string = \"Copy Once Paste Anywhere\";\n\n  constructor(private httpService: HttpService,\n    protected keycloakAngular: KeycloakService\n    ) { }\n\n  ngOnInit(): void {\n    // let accessToken = this.keycloakAngular.getKeycloakInstance().token;\n    // console.log(this.keycloakAngular.getKeycloakInstance());\n  }\n\n  public logout(): void {\n    // this.keycloakAngular.getKeycloakInstance().logout();\n    this.keycloakAngular.logout();\n  }\n\n  public get getHeaderText(): string {\n    return this.headerText;\n  }\n\n}\n","<mat-toolbar [class.mat-elevation-z8]=\"true\" color=\"primary\">  \n  <div style=\"width: 95%;\">\n    <span>{{getHeaderText}}</span>\n  </div>\n    <div style=\"width: 5%; margin-top: 1%;\">\n      <mat-icon style=\"cursor: pointer; \">account_circle</mat-icon>\n    </div>\n    <div>\n      <button mat-button (click)=\"logout()\">Log out</button>\n    </div>\n  </mat-toolbar>\n  \n  ","// import { Injectable } from '@angular/core';\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class HttpService {\n\n//   constructor() { }\n// }\n\nimport {\n  Injectable\n} from '@angular/core';\nimport {\n  HttpClient, HttpHeaders\n} from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport { KeycloakService } from './keycloak.service';\nimport * as jwt_decode from 'jwt-decode';\nimport { ClipboardData } from './clipboard.interface';\n// import { KeycloakService } from 'keycloak-angular';\n// import { LOGIN_URL, LOGIN_AUTH } from 'src/app/_constants/app.constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {  \n  private getAllClipsApi: string =  environment.clipboardserver.baseUrl + \"/clips/\"\n  private addClipApi: string = environment.clipboardserver.baseUrl+\"/addClip/\"\n  private deleteApi: string = environment.clipboardserver.baseUrl+\"/deleteClip/\"\n\n  private options;\n  constructor(private http: HttpClient,\n    // protected keycloakAngular: KeycloakService\n    protected keycloakAngular: KeycloakService) {\n      \n    }\n\n  getAllClips() {\n    let options = {\n      headers: new HttpHeaders()\n        // .set('Authorization',  `Bearer `+this.keycloakAngular.getKeycloakInstance().token)\n        .set('Authorization',  `Bearer `+this.keycloakAngular.getToken())\n    }\n    let decodedToken = jwt_decode(this.keycloakAngular.getToken()); \n    console.log(\"decoded token: \", decodedToken);\n    let userId = decodedToken[\"preferred_username\"];\n    let url: string = this.getAllClipsApi+userId;    \n    // console.log(this.keycloakAngular.getKeycloakInstance());\n    return this.http.get(url, \n        options\n      );\n  }\n  \n  addClip(reqBody: any) {\n    let options = {\n      headers: new HttpHeaders()\n        // .set('Authorization',  `Bearer `+this.keycloakAngular.getKeycloakInstance().token)\n        .set('Authorization',  `Bearer `+this.keycloakAngular.getToken())\n    }\n    return this.http.post(this.addClipApi, reqBody, \n      options\n      );\n  }\n\n  deleteClip(clipData: ClipboardData) {\n    let id = clipData._id;\n    let options = {\n      headers: new HttpHeaders().set('Authorization',  `Bearer `+this.keycloakAngular.getToken()),\n      body: {\n        \"_id\": id\n      }\n    }\n    return this.http.delete(this.deleteApi, options);\n  }\n}\n","// import { Injectable } from '@angular/core';\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class IpcService {\n\n//   constructor() { }\n// }\n\nimport { Injectable } from '@angular/core';\nimport { IpcRenderer } from 'electron';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IpcService {\n  private _ipc: IpcRenderer | undefined = void 0;\n\n  constructor() {\n    if (window.require) {\n      try {\n        this._ipc = window.require('electron').ipcRenderer;\n      } catch (e) {\n        throw e;\n      }\n    } else {\n      console.warn('Electron\\'s IPC was not loaded');\n    }\n  }\n\n  public on(channel: string, listener: any): void {\n    if (!this._ipc) {\n      return;\n    }\n    this._ipc.on(channel, listener);\n  }\n\n  public send(channel: string, ...args): void {\n    if (!this._ipc) {\n      return;\n    }\n    this._ipc.send(channel, ...args);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { IpcService } from './ipc.service';\ndeclare var Keycloak: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class KeycloakService {\n\n  constructor() { \n  }\n\n  private keycloakAuth: any;\n  init(): Promise<any> {\n  return new Promise((resolve, reject) => {\n      const config = {\n        url: 'https://copa-keycloak.herokuapp.com/auth',\n        // url: 'http://localhost:8080/auth',\n        realm: 'copa',\n        clientId: 'angular-client'\n      };\n      this.keycloakAuth = new Keycloak(config);\n      this.keycloakAuth.init({ \n        onLoad: 'login-required', \n      })\n        .success((authenticated) => {\n          console.log(\"user authenticated\", authenticated);          \n          resolve();          \n        })\n        .error(() => {\n          reject();\n        });\n      });\n  }\n  getToken(): string {\n    return this.keycloakAuth.token;\n  }\n\n  logout(): void {\n    return this.keycloakAuth.logout();\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n\n@NgModule({\n  exports: [\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n    ClipboardModule\n  ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google LLC. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license */","\nimport {Component, Inject, OnInit, Input} from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { HttpService } from '../http.service';\nimport { ClipboardData } from '../clipboard.interface';\nimport { SocketService } from '../socket.service';\nimport { DialogOverviewComponent } from '../dialog-overview/dialog-overview.component';\nimport { IpcService } from '../ipc.service';\n\n/**\n * @title Dialog Overview\n */\n@Component({\n    selector: 'app-mobile-clipboard-card',\n    templateUrl: './mobile-clipboard-card.component.html',\n    styleUrls: ['./mobile-clipboard-card.component.css']\n})\nexport class MobileClipboardCardComponent implements OnInit{\n  @Input() mobileClipboardDataArr: ClipboardData[] = [];\n  constructor(\n    public dialog: MatDialog, \n    private httpService: HttpService, \n    // private socketService: SocketService,\n    // private ipcService: IpcService\n    ) { }\n\n  // addToClipboardArr(data: ClipboardData) {\n  //   if(data != undefined) {\n  //     if (data[\"fromType\"] !== \"desktop\"){\n  //       if(data[\"clipboardText\"].length>=30) {\n  //         data[\"displayMessage\"] = data[\"clipboardText\"].split(\" \").slice(0,6).join(\" \")+\"......\"\n  //         } else {\n  //         data[\"displayMessage\"] = data[\"clipboardText\"]\n  //         }\n  //         console.log(\"Desktop component: \", data);\n  //         this.clipboardDataArr.push(data);\n  //         this.clipboardDataArr.sort((a, b) => +a.timestamp > +b.timestamp ? -1 : 1) \n  //     }      \n  //   }\n  // }\n\n  ngOnInit(): void {\n    // this.httpService.getAllClips().subscribe((data: any) => {\n    //   console.log(data);      \n    //   data.forEach((d: ClipboardData) => {\n    //     this.addToClipboardArr(d);\n    //   })\n      \n    // });\n\n    // this.socketService.getClips().subscribe((data: ClipboardData) => {\n    //   console.log(\"New data in mobile component: \", data);\n    //   // this.addToClipboardArr(data);\n    //   this.clipboardDataArr = [];\n    //   this.httpService.getAllClips().subscribe((data: any) => {\n    //     console.log(data);      \n    //     data.forEach((d: ClipboardData) => {\n    //       this.addToClipboardArr(d);\n    //     })\n        \n    //   });\n    //   this.ipcService.send('newData', data);\n    // })\n  }\n\n  openDialog(data): void {\n    const dialogRef = this.dialog.open(DialogOverviewComponent, {\n      width: '350px',\n      data: data\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n    });\n  }\n\n  deleteClip(data: ClipboardData): void {\n    this.httpService.deleteClip(data).subscribe((resultData: any) => {\n      console.log(\"delete response: \", resultData);\n      // this.mobileClipboardDataArr = this.mobileClipboardDataArr.filter(function( obj ) {\n      //   return obj._id !== data._id;\n      // });\n    })\n  }\n\n}\n\n/**  Copyright 2019 Google LLC. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license */\n","<mat-card *ngFor=\"let data of mobileClipboardDataArr\" style=\"margin: 2% 0%; display: flex; \">\n    <div style=\"display: flex; justify-content: space-between; width: 100%;\">\n        <div class=\"text-class\" (click)=\"openDialog(data)\">\n            {{data.displayMessage}}\n        </div> \n        <!-- <div class=\"date-class\">\n            {{data.timestamp}}\n        </div>   -->\n        <div class=\"example-button-container\">\n            <button mat-icon-button color=\"primary\" aria-label=\"Example icon button with a delete icon\" (click)=\"deleteClip(data)\">\n                <mat-icon>delete</mat-icon>\n            </button>\n        </div>\n    </div>   \n</mat-card>\n","import { Injectable } from '@angular/core';\n// import { Socket } from 'ngx-socket-io';\nimport { Observable } from 'rxjs';\nimport { Socket } from 'ngx-socket-io';\nimport { KeycloakService } from './keycloak.service';\n// import { KeycloakService } from 'keycloak-angular';\n// import * as io from 'socket.io-client';\n// import { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketService {  \n\n  constructor(\n    private socket: Socket,\n    private keycloakAngular: KeycloakService\n  ) {    \n    // this.socket.emit(\"join\", {token: this.keycloakAngular.getKeycloakInstance().token});\n    this.socket.emit(\"join\", {token: this.keycloakAngular.getToken()});\n   }\n\n  getClips() {\n      return this.socket\n          .fromEvent(\"newData\");\n  }\n\n  listenForNewDataArrived() {\n    return this.socket\n        .fromEvent(\"newDataArrived\");\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\n// import { KeycloakConfig } from 'keycloak-angular';\n\n// Add here your keycloak setup infos\n// let keycloakConfig: KeycloakConfig = {\n//   url: 'https://copa-keycloak.herokuapp.com/auth',\n//   // url: 'http://localhost:8080/auth',\n//   realm: 'copa',\n//   clientId: 'angular-client'\n// };\n\nexport const environment = {\n  production: false,\n  // keycloak: keycloakConfig,  \n  clipboardserver: {\n    baseUrl: \"http://localhost:3010\"\n    // baseUrl: \"https://clipboard-syncronization-app.appspot.com\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":"webpack:///"}